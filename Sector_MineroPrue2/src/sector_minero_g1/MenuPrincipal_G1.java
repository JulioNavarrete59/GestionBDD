/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sector_minero_g1;

import com.formdev.flatlaf.FlatIntelliJLaf;
import com.formdev.flatlaf.FlatLightLaf;
import java.awt.Component;
import java.awt.GridLayout;
import javax.swing.table.DefaultTableModel;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.UIManager;



public class MenuPrincipal_G1 extends javax.swing.JFrame {

    /**
     * Creates new form MenuPrincipal_G1
     */
    public MenuPrincipal_G1() {
        // Configurar el Look and Feel (FlatLightLaf)
        try {
            UIManager.setLookAndFeel(new FlatIntelliJLaf ());
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
        try {
            initComponents();
            setIconImage(new ImageIcon(getClass().getResource("/imagen/G1_Logo_icono.png")).getImage());
            actualizar();
        } catch (SQLException ex) {
            Logger.getLogger(MenuPrincipal_G1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        Vista_Mina = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        datos_panel_mina = new javax.swing.JPanel();
        btn_registrarMinas = new javax.swing.JButton();
        btn_actualizarMinas = new javax.swing.JButton();
        btn_eliminarMinas = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_NombreMina = new javax.swing.JTextField();
        txt_capExtMina = new javax.swing.JTextField();
        btn_buscar1 = new javax.swing.JButton();
        txt_buscarNombreMina = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cbx_idUbiMin = new javax.swing.JComboBox<>();
        jLabel37 = new javax.swing.JLabel();
        cbx_idEmpMin = new javax.swing.JComboBox<>();
        jLabel38 = new javax.swing.JLabel();
        cbx_idEquipoMin = new javax.swing.JComboBox<>();
        jLabel39 = new javax.swing.JLabel();
        cbx_idProdMin = new javax.swing.JComboBox<>();
        jLabel42 = new javax.swing.JLabel();
        cbx_estadoMin = new javax.swing.JComboBox<>();
        jLabel43 = new javax.swing.JLabel();
        cbx_idTipoMina = new javax.swing.JComboBox<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        tbl_minas = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        datos_panel_tipomineral = new javax.swing.JPanel();
        btn_registrarTipoMineral = new javax.swing.JButton();
        btn_actualizarTipoMinas = new javax.swing.JButton();
        btn_eliminarTipoMinas = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txt_nombreTM = new javax.swing.JTextField();
        txt_descripcionTM = new javax.swing.JTextField();
        txt_densidadTM = new javax.swing.JTextField();
        txt_puntoFusTM = new javax.swing.JTextField();
        txt_puntoEbuTM = new javax.swing.JTextField();
        btn_buscar2 = new javax.swing.JButton();
        txt_buscarNombreTipoMina = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbl_TipoMineral = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        datos_panel_empleado = new javax.swing.JPanel();
        btn_registrarEmpleados = new javax.swing.JButton();
        btn_actualizarEmpleados = new javax.swing.JButton();
        btn_eliminarEmpleados = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txt_nombreEmpl = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txt_ApellidoEmpl = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txt_FechaNacimientoEmpl = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txt_puestoEmpl = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        txt_buscarNombreEmpleado = new javax.swing.JTextField();
        btn_buscar3 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbl_empleados = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        datos_panel_produccion = new javax.swing.JPanel();
        btn_registrarProduccion = new javax.swing.JButton();
        btn_actualizarProduccion = new javax.swing.JButton();
        btn_eliminarProduccion = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        txt_fechaProd = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txt_mineralExt = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txt_cantidadExt = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        txt_buscarNombreProduccion = new javax.swing.JTextField();
        btn_buscar4 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_produccion = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        datos_panel_equipo = new javax.swing.JPanel();
        btn_registrarEquipos = new javax.swing.JButton();
        btn_actualizarEquipos = new javax.swing.JButton();
        btn_eliminarEquipos = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        txt_nombreEqui = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txt_tipoEqui = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txt_estadoEqui = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txt_buscarNombreEquipo = new javax.swing.JTextField();
        btn_buscar5 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_equipos = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        datos_panel_mantenimiento = new javax.swing.JPanel();
        btn_registrarMantenimiento = new javax.swing.JButton();
        btn_actualizarMantenimiento = new javax.swing.JButton();
        btn_eliminarMantenimiento = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        txt_fechaMant = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txt_descripcionMant = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txt_costoMant = new javax.swing.JTextField();
        cbx_idEquiMant = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        txt_buscarFechaMant = new javax.swing.JTextField();
        btn_buscar6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_mantenimiento = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        datos_panel_ubicacion = new javax.swing.JPanel();
        btn_registrarUbicacion = new javax.swing.JButton();
        btn_actualizaUbicacion = new javax.swing.JButton();
        btn_eliminarUbicacion = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        cbx_idCiudad = new javax.swing.JComboBox<>();
        jLabel36 = new javax.swing.JLabel();
        txt_latitud = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        txt_longitud = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        txt_altitud = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbl_minas_ubi = new javax.swing.JTable();
        btn_regresarlogo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 153, 0), 2));

        jLabel2.setFont(new java.awt.Font("Perpetua Titling MT", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 153, 0));
        jLabel2.setText("SECTOR MINERO");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        Vista_Mina.setBackground(new java.awt.Color(255, 255, 255));
        Vista_Mina.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));

        datos_panel_mina.setBackground(new java.awt.Color(255, 255, 255));

        btn_registrarMinas.setBackground(new java.awt.Color(204, 153, 0));
        btn_registrarMinas.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_registrarMinas.setText("REGISTRAR");
        btn_registrarMinas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registrarMinasActionPerformed(evt);
            }
        });

        btn_actualizarMinas.setBackground(new java.awt.Color(204, 153, 0));
        btn_actualizarMinas.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_actualizarMinas.setText("ACTUALIZAR");
        btn_actualizarMinas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizarMinasActionPerformed(evt);
            }
        });

        btn_eliminarMinas.setBackground(new java.awt.Color(204, 153, 0));
        btn_eliminarMinas.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_eliminarMinas.setText("ELIMINAR");
        btn_eliminarMinas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarMinasActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Nombre:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("ID Ubicación:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Capacidad de extracción:");

        btn_buscar1.setBackground(new java.awt.Color(204, 153, 0));
        btn_buscar1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_buscar1.setText("BUSCAR");
        btn_buscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscar1ActionPerformed(evt);
            }
        });

        txt_buscarNombreMina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_buscarNombreMinaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Buscar por Nombre:");

        cbx_idUbiMin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel37.setText("ID Empleado:");

        cbx_idEmpMin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel38.setText("ID Equipos:");

        cbx_idEquipoMin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel39.setText("ID Producción:");

        cbx_idProdMin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel42.setText("Estado:");

        cbx_estadoMin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel43.setText("ID Tipo Mina:");

        cbx_idTipoMina.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout datos_panel_minaLayout = new javax.swing.GroupLayout(datos_panel_mina);
        datos_panel_mina.setLayout(datos_panel_minaLayout);
        datos_panel_minaLayout.setHorizontalGroup(
            datos_panel_minaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datos_panel_minaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datos_panel_minaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6)
                    .addComponent(txt_capExtMina, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(txt_NombreMina, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addComponent(cbx_idUbiMin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel42)
                    .addComponent(cbx_estadoMin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addGroup(datos_panel_minaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel39)
                    .addComponent(cbx_idEquipoMin, 0, 176, Short.MAX_VALUE)
                    .addComponent(cbx_idEmpMin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel37)
                    .addComponent(jLabel38)
                    .addComponent(cbx_idProdMin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel43)
                    .addComponent(cbx_idTipoMina, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(109, 109, 109)
                .addGroup(datos_panel_minaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datos_panel_minaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(datos_panel_minaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(datos_panel_minaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btn_registrarMinas, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_actualizarMinas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btn_eliminarMinas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btn_buscar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txt_buscarNombreMina, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap())
        );
        datos_panel_minaLayout.setVerticalGroup(
            datos_panel_minaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datos_panel_minaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datos_panel_minaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datos_panel_minaLayout.createSequentialGroup()
                        .addComponent(jLabel37)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbx_idEmpMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel38)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbx_idEquipoMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel39)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbx_idProdMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbx_idTipoMina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104))
                    .addGroup(datos_panel_minaLayout.createSequentialGroup()
                        .addComponent(btn_registrarMinas, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(btn_actualizarMinas, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_eliminarMinas, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_buscar1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(9, 9, 9)
                        .addComponent(txt_buscarNombreMina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(datos_panel_minaLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_NombreMina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbx_idUbiMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_capExtMina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel42)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbx_estadoMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102))))
        );

        tbl_minas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane7.setViewportView(tbl_minas);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7)
                    .addComponent(datos_panel_mina, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(datos_panel_mina, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                .addContainerGap())
        );

        Vista_Mina.addTab("Minas", jPanel4);

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));

        datos_panel_tipomineral.setBackground(new java.awt.Color(255, 255, 255));

        btn_registrarTipoMineral.setBackground(new java.awt.Color(204, 153, 0));
        btn_registrarTipoMineral.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_registrarTipoMineral.setText("REGISTRAR");
        btn_registrarTipoMineral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registrarTipoMineralActionPerformed(evt);
            }
        });

        btn_actualizarTipoMinas.setBackground(new java.awt.Color(204, 153, 0));
        btn_actualizarTipoMinas.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_actualizarTipoMinas.setText("ACTUALIZAR");
        btn_actualizarTipoMinas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizarTipoMinasActionPerformed(evt);
            }
        });

        btn_eliminarTipoMinas.setBackground(new java.awt.Color(204, 153, 0));
        btn_eliminarTipoMinas.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_eliminarTipoMinas.setText("ELIMINAR");
        btn_eliminarTipoMinas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarTipoMinasActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Nombre:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Descripción:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Punto de Fusión:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Densidad:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Punto de Ebullición:");

        btn_buscar2.setBackground(new java.awt.Color(204, 153, 0));
        btn_buscar2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_buscar2.setText("BUSCAR");
        btn_buscar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscar2ActionPerformed(evt);
            }
        });

        txt_buscarNombreTipoMina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_buscarNombreTipoMinaActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel30.setText("Buscar por Nombre:");

        javax.swing.GroupLayout datos_panel_tipomineralLayout = new javax.swing.GroupLayout(datos_panel_tipomineral);
        datos_panel_tipomineral.setLayout(datos_panel_tipomineralLayout);
        datos_panel_tipomineralLayout.setHorizontalGroup(
            datos_panel_tipomineralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datos_panel_tipomineralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datos_panel_tipomineralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datos_panel_tipomineralLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(161, 161, 161))
                    .addGroup(datos_panel_tipomineralLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addGap(145, 145, 145))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datos_panel_tipomineralLayout.createSequentialGroup()
                        .addGroup(datos_panel_tipomineralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, datos_panel_tipomineralLayout.createSequentialGroup()
                                .addComponent(txt_descripcionTM, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                                .addComponent(txt_puntoEbuTM, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, datos_panel_tipomineralLayout.createSequentialGroup()
                                .addComponent(txt_nombreTM, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_puntoFusTM, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(datos_panel_tipomineralLayout.createSequentialGroup()
                                .addGroup(datos_panel_tipomineralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_densidadTM, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(datos_panel_tipomineralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel30)
                                    .addComponent(txt_buscarNombreTipoMina, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(93, 93, 93)))
                .addGroup(datos_panel_tipomineralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_registrarTipoMineral, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_actualizarTipoMinas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_eliminarTipoMinas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_buscar2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        datos_panel_tipomineralLayout.setVerticalGroup(
            datos_panel_tipomineralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datos_panel_tipomineralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datos_panel_tipomineralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datos_panel_tipomineralLayout.createSequentialGroup()
                        .addGroup(datos_panel_tipomineralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(datos_panel_tipomineralLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_puntoFusTM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(76, 76, 76))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datos_panel_tipomineralLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_nombreTM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addGroup(datos_panel_tipomineralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(datos_panel_tipomineralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_descripcionTM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_puntoEbuTM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(datos_panel_tipomineralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel30))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(datos_panel_tipomineralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_densidadTM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_buscarNombreTipoMina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(datos_panel_tipomineralLayout.createSequentialGroup()
                        .addComponent(btn_registrarTipoMineral, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(btn_actualizarTipoMinas, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_eliminarTipoMinas, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_buscar2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        tbl_TipoMineral.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(tbl_TipoMineral);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(datos_panel_tipomineral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane6))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(datos_panel_tipomineral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                .addContainerGap())
        );

        Vista_Mina.addTab("Tipo de Mineral", jPanel5);

        jPanel7.setBackground(new java.awt.Color(0, 0, 0));

        datos_panel_empleado.setBackground(new java.awt.Color(255, 255, 255));

        btn_registrarEmpleados.setBackground(new java.awt.Color(204, 153, 0));
        btn_registrarEmpleados.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_registrarEmpleados.setText("REGISTRAR");
        btn_registrarEmpleados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registrarEmpleadosActionPerformed(evt);
            }
        });

        btn_actualizarEmpleados.setBackground(new java.awt.Color(204, 153, 0));
        btn_actualizarEmpleados.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_actualizarEmpleados.setText("ACTUALIZAR");
        btn_actualizarEmpleados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizarEmpleadosActionPerformed(evt);
            }
        });

        btn_eliminarEmpleados.setBackground(new java.awt.Color(204, 153, 0));
        btn_eliminarEmpleados.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_eliminarEmpleados.setText("ELIMINAR");
        btn_eliminarEmpleados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarEmpleadosActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Nombre:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Apellido:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Fecha de Nacimiento:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Puesto:");

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel32.setText("Buscar por Nombre:");

        btn_buscar3.setBackground(new java.awt.Color(204, 153, 0));
        btn_buscar3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_buscar3.setText("BUSCAR");
        btn_buscar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscar3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout datos_panel_empleadoLayout = new javax.swing.GroupLayout(datos_panel_empleado);
        datos_panel_empleado.setLayout(datos_panel_empleadoLayout);
        datos_panel_empleadoLayout.setHorizontalGroup(
            datos_panel_empleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datos_panel_empleadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datos_panel_empleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_nombreEmpl, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(txt_ApellidoEmpl, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(txt_FechaNacimientoEmpl, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(datos_panel_empleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datos_panel_empleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel32)
                        .addComponent(txt_buscarNombreEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel15)
                    .addComponent(txt_puestoEmpl, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(datos_panel_empleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datos_panel_empleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(datos_panel_empleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(datos_panel_empleadoLayout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addComponent(btn_registrarEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datos_panel_empleadoLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_actualizarEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datos_panel_empleadoLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btn_eliminarEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datos_panel_empleadoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_buscar3, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        datos_panel_empleadoLayout.setVerticalGroup(
            datos_panel_empleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datos_panel_empleadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datos_panel_empleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datos_panel_empleadoLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_nombreEmpl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_ApellidoEmpl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_FechaNacimientoEmpl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(datos_panel_empleadoLayout.createSequentialGroup()
                        .addComponent(btn_registrarEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(btn_actualizarEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_eliminarEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_buscar3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(datos_panel_empleadoLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_puestoEmpl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_buscarNombreEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        tbl_empleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tbl_empleados);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(datos_panel_empleado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 735, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(datos_panel_empleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                .addContainerGap())
        );

        Vista_Mina.addTab("Empleados", jPanel7);

        jPanel8.setBackground(new java.awt.Color(0, 0, 0));

        datos_panel_produccion.setBackground(new java.awt.Color(255, 255, 255));

        btn_registrarProduccion.setBackground(new java.awt.Color(204, 153, 0));
        btn_registrarProduccion.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_registrarProduccion.setText("REGISTRAR");
        btn_registrarProduccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registrarProduccionActionPerformed(evt);
            }
        });

        btn_actualizarProduccion.setBackground(new java.awt.Color(204, 153, 0));
        btn_actualizarProduccion.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_actualizarProduccion.setText("ACTUALIZAR");
        btn_actualizarProduccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizarProduccionActionPerformed(evt);
            }
        });

        btn_eliminarProduccion.setBackground(new java.awt.Color(204, 153, 0));
        btn_eliminarProduccion.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_eliminarProduccion.setText("ELIMINAR");
        btn_eliminarProduccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarProduccionActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Fecha:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Mineral Extraído:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Cantidad Extraída:");

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel33.setText("Buscar por Fecha:");

        btn_buscar4.setBackground(new java.awt.Color(204, 153, 0));
        btn_buscar4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_buscar4.setText("BUSCAR");
        btn_buscar4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscar4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout datos_panel_produccionLayout = new javax.swing.GroupLayout(datos_panel_produccion);
        datos_panel_produccion.setLayout(datos_panel_produccionLayout);
        datos_panel_produccionLayout.setHorizontalGroup(
            datos_panel_produccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datos_panel_produccionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datos_panel_produccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(txt_fechaProd, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33)
                    .addComponent(txt_buscarNombreProduccion, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(datos_panel_produccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(txt_mineralExt, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(txt_cantidadExt, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(96, 96, 96)
                .addGroup(datos_panel_produccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datos_panel_produccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btn_registrarProduccion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_actualizarProduccion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_eliminarProduccion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_buscar4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        datos_panel_produccionLayout.setVerticalGroup(
            datos_panel_produccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datos_panel_produccionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datos_panel_produccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datos_panel_produccionLayout.createSequentialGroup()
                        .addGroup(datos_panel_produccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(datos_panel_produccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_fechaProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_mineralExt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(datos_panel_produccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(jLabel20))
                        .addGap(18, 18, 18)
                        .addGroup(datos_panel_produccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_buscarNombreProduccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_cantidadExt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(datos_panel_produccionLayout.createSequentialGroup()
                        .addComponent(btn_registrarProduccion, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_actualizarProduccion, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_eliminarProduccion, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_buscar4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        tbl_produccion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tbl_produccion);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(datos_panel_produccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 735, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(datos_panel_produccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                .addContainerGap())
        );

        Vista_Mina.addTab("Producción", jPanel8);

        jPanel9.setBackground(new java.awt.Color(0, 0, 0));

        datos_panel_equipo.setBackground(new java.awt.Color(255, 255, 255));

        btn_registrarEquipos.setBackground(new java.awt.Color(204, 153, 0));
        btn_registrarEquipos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_registrarEquipos.setText("REGISTRAR");
        btn_registrarEquipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registrarEquiposActionPerformed(evt);
            }
        });

        btn_actualizarEquipos.setBackground(new java.awt.Color(204, 153, 0));
        btn_actualizarEquipos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_actualizarEquipos.setText("ACTUALIZAR");
        btn_actualizarEquipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizarEquiposActionPerformed(evt);
            }
        });

        btn_eliminarEquipos.setBackground(new java.awt.Color(204, 153, 0));
        btn_eliminarEquipos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_eliminarEquipos.setText("ELIMINAR");
        btn_eliminarEquipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarEquiposActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Nombre:");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Tipo de Equipo:");

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText("Estado:");

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel34.setText("Buscar por Nombre:");

        btn_buscar5.setBackground(new java.awt.Color(204, 153, 0));
        btn_buscar5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_buscar5.setText("BUSCAR");
        btn_buscar5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscar5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout datos_panel_equipoLayout = new javax.swing.GroupLayout(datos_panel_equipo);
        datos_panel_equipo.setLayout(datos_panel_equipoLayout);
        datos_panel_equipoLayout.setHorizontalGroup(
            datos_panel_equipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datos_panel_equipoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datos_panel_equipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datos_panel_equipoLayout.createSequentialGroup()
                        .addGroup(datos_panel_equipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(txt_nombreEqui, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22)
                            .addComponent(txt_tipoEqui, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addGroup(datos_panel_equipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel34)
                            .addComponent(txt_buscarNombreEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(96, 96, 96)
                        .addGroup(datos_panel_equipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_registrarEquipos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_actualizarEquipos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datos_panel_equipoLayout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_eliminarEquipos, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datos_panel_equipoLayout.createSequentialGroup()
                        .addComponent(txt_estadoEqui, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_buscar5, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        datos_panel_equipoLayout.setVerticalGroup(
            datos_panel_equipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datos_panel_equipoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datos_panel_equipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datos_panel_equipoLayout.createSequentialGroup()
                        .addGroup(datos_panel_equipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(jLabel34))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(datos_panel_equipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_nombreEqui, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_buscarNombreEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_tipoEqui, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_estadoEqui, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(datos_panel_equipoLayout.createSequentialGroup()
                        .addComponent(btn_registrarEquipos, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_actualizarEquipos, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_eliminarEquipos, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_buscar5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        tbl_equipos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tbl_equipos);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(datos_panel_equipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 735, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(datos_panel_equipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                .addContainerGap())
        );

        Vista_Mina.addTab("Equipos", jPanel9);

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));

        datos_panel_mantenimiento.setBackground(new java.awt.Color(255, 255, 255));

        btn_registrarMantenimiento.setBackground(new java.awt.Color(204, 153, 0));
        btn_registrarMantenimiento.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_registrarMantenimiento.setText("REGISTRAR");
        btn_registrarMantenimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registrarMantenimientoActionPerformed(evt);
            }
        });

        btn_actualizarMantenimiento.setBackground(new java.awt.Color(204, 153, 0));
        btn_actualizarMantenimiento.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_actualizarMantenimiento.setText("ACTUALIZAR");
        btn_actualizarMantenimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizarMantenimientoActionPerformed(evt);
            }
        });

        btn_eliminarMantenimiento.setBackground(new java.awt.Color(204, 153, 0));
        btn_eliminarMantenimiento.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_eliminarMantenimiento.setText("ELIMINAR");
        btn_eliminarMantenimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarMantenimientoActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setText("Fecha:");

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setText("Nombre Equipo:");

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setText("Descripción:");

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setText("Costo:");

        cbx_idEquiMant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel35.setText("Buscar por Fecha:");

        btn_buscar6.setBackground(new java.awt.Color(204, 153, 0));
        btn_buscar6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_buscar6.setText("BUSCAR");
        btn_buscar6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscar6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout datos_panel_mantenimientoLayout = new javax.swing.GroupLayout(datos_panel_mantenimiento);
        datos_panel_mantenimiento.setLayout(datos_panel_mantenimientoLayout);
        datos_panel_mantenimientoLayout.setHorizontalGroup(
            datos_panel_mantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datos_panel_mantenimientoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datos_panel_mantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datos_panel_mantenimientoLayout.createSequentialGroup()
                        .addGroup(datos_panel_mantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel25)
                            .addComponent(txt_fechaMant, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                            .addComponent(jLabel26)
                            .addComponent(cbx_idEquiMant, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addGroup(datos_panel_mantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(txt_descripcionMant, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_costoMant, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28))
                        .addGap(96, 96, 96)
                        .addGroup(datos_panel_mantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_registrarMantenimiento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_actualizarMantenimiento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datos_panel_mantenimientoLayout.createSequentialGroup()
                        .addGroup(datos_panel_mantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel35)
                            .addComponent(txt_buscarFechaMant, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(datos_panel_mantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_eliminarMantenimiento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_buscar6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        datos_panel_mantenimientoLayout.setVerticalGroup(
            datos_panel_mantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datos_panel_mantenimientoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datos_panel_mantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datos_panel_mantenimientoLayout.createSequentialGroup()
                        .addGroup(datos_panel_mantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(jLabel27))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(datos_panel_mantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_fechaMant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_descripcionMant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(datos_panel_mantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(datos_panel_mantenimientoLayout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbx_idEquiMant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(datos_panel_mantenimientoLayout.createSequentialGroup()
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_costoMant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_buscarFechaMant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(datos_panel_mantenimientoLayout.createSequentialGroup()
                        .addComponent(btn_registrarMantenimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_actualizarMantenimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_eliminarMantenimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_buscar6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbl_mantenimiento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbl_mantenimiento);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(datos_panel_mantenimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 735, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(datos_panel_mantenimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                .addContainerGap())
        );

        Vista_Mina.addTab("Mantenimiento", jPanel10);

        jPanel11.setBackground(new java.awt.Color(0, 0, 0));

        datos_panel_ubicacion.setBackground(new java.awt.Color(255, 255, 255));

        btn_registrarUbicacion.setBackground(new java.awt.Color(204, 153, 0));
        btn_registrarUbicacion.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_registrarUbicacion.setText("REGISTRAR");
        btn_registrarUbicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registrarUbicacionActionPerformed(evt);
            }
        });

        btn_actualizaUbicacion.setBackground(new java.awt.Color(204, 153, 0));
        btn_actualizaUbicacion.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_actualizaUbicacion.setText("ACTUALIZAR");
        btn_actualizaUbicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizaUbicacionActionPerformed(evt);
            }
        });

        btn_eliminarUbicacion.setBackground(new java.awt.Color(204, 153, 0));
        btn_eliminarUbicacion.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_eliminarUbicacion.setText("ELIMINAR");
        btn_eliminarUbicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarUbicacionActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel31.setText("Ciudad:");

        cbx_idCiudad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel36.setText("Latitud:");

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel40.setText("Longitud:");

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel41.setText("Altitud:");

        javax.swing.GroupLayout datos_panel_ubicacionLayout = new javax.swing.GroupLayout(datos_panel_ubicacion);
        datos_panel_ubicacion.setLayout(datos_panel_ubicacionLayout);
        datos_panel_ubicacionLayout.setHorizontalGroup(
            datos_panel_ubicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datos_panel_ubicacionLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(datos_panel_ubicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_altitud, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36)
                    .addComponent(txt_latitud, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(datos_panel_ubicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datos_panel_ubicacionLayout.createSequentialGroup()
                        .addGroup(datos_panel_ubicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(datos_panel_ubicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cbx_idCiudad, 0, 172, Short.MAX_VALUE)
                                .addComponent(jLabel40)
                                .addComponent(txt_longitud))
                            .addComponent(jLabel31))
                        .addGap(96, 96, 96)
                        .addGroup(datos_panel_ubicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_registrarUbicacion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_actualizaUbicacion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(datos_panel_ubicacionLayout.createSequentialGroup()
                        .addGap(268, 268, 268)
                        .addComponent(btn_eliminarUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29))
        );
        datos_panel_ubicacionLayout.setVerticalGroup(
            datos_panel_ubicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datos_panel_ubicacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datos_panel_ubicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(datos_panel_ubicacionLayout.createSequentialGroup()
                        .addGroup(datos_panel_ubicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(datos_panel_ubicacionLayout.createSequentialGroup()
                                .addComponent(btn_registrarUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_actualizaUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(datos_panel_ubicacionLayout.createSequentialGroup()
                                .addComponent(jLabel31)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbx_idCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                .addComponent(jLabel40)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)))
                        .addGroup(datos_panel_ubicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_eliminarUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_longitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(datos_panel_ubicacionLayout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_latitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel41)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_altitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)))
                .addContainerGap())
        );

        tbl_minas_ubi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(tbl_minas_ubi);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(datos_panel_ubicacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(datos_panel_ubicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 755, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 582, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Vista_Mina.addTab("Ubicación", jPanel6);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Vista_Mina)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Vista_Mina)
        );

        btn_regresarlogo.setBackground(new java.awt.Color(0, 0, 0));
        btn_regresarlogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/G1_Logo_icono.png"))); // NOI18N
        btn_regresarlogo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_regresarlogo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_regresarlogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_regresarlogoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_regresarlogo, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btn_regresarlogo, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_actualizarTipoMinasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizarTipoMinasActionPerformed
        actualizarTipoMina();
    }//GEN-LAST:event_btn_actualizarTipoMinasActionPerformed

    private void btn_registrarMinasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registrarMinasActionPerformed
        registrarMina();
    }//GEN-LAST:event_btn_registrarMinasActionPerformed

    private void btn_actualizarMinasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizarMinasActionPerformed
        actualizarMina();
    }//GEN-LAST:event_btn_actualizarMinasActionPerformed

    private void btn_eliminarMinasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarMinasActionPerformed
        eliminarMina();
    }//GEN-LAST:event_btn_eliminarMinasActionPerformed

    private void btn_registrarTipoMineralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registrarTipoMineralActionPerformed
        registarTipoMineral();
    }//GEN-LAST:event_btn_registrarTipoMineralActionPerformed

    private void btn_eliminarTipoMinasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarTipoMinasActionPerformed
        eliminarTipoMina();
    }//GEN-LAST:event_btn_eliminarTipoMinasActionPerformed

    private void btn_registrarEmpleadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registrarEmpleadosActionPerformed
        registrarEmpleado();
    }//GEN-LAST:event_btn_registrarEmpleadosActionPerformed

    private void btn_actualizarEmpleadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizarEmpleadosActionPerformed
        actualizarEmpleado();
    }//GEN-LAST:event_btn_actualizarEmpleadosActionPerformed

    private void btn_eliminarEmpleadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarEmpleadosActionPerformed
        eliminarEmpleado();
    }//GEN-LAST:event_btn_eliminarEmpleadosActionPerformed

    private void btn_registrarProduccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registrarProduccionActionPerformed
        registrarProduccion();
    }//GEN-LAST:event_btn_registrarProduccionActionPerformed

    private void btn_actualizarProduccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizarProduccionActionPerformed
        actualizarProduccion();
    }//GEN-LAST:event_btn_actualizarProduccionActionPerformed

    private void btn_eliminarProduccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarProduccionActionPerformed
        eliminarProduccion();
    }//GEN-LAST:event_btn_eliminarProduccionActionPerformed

    private void btn_registrarEquiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registrarEquiposActionPerformed
        registrarEquipo();
    }//GEN-LAST:event_btn_registrarEquiposActionPerformed

    private void btn_actualizarEquiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizarEquiposActionPerformed
        actualizarEquipos();
    }//GEN-LAST:event_btn_actualizarEquiposActionPerformed

    private void btn_eliminarEquiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarEquiposActionPerformed
        eliminarEquipo();
    }//GEN-LAST:event_btn_eliminarEquiposActionPerformed

    private void btn_registrarMantenimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registrarMantenimientoActionPerformed
        registrarMantenimiento();
    }//GEN-LAST:event_btn_registrarMantenimientoActionPerformed

    private void btn_actualizarMantenimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizarMantenimientoActionPerformed
        actualizarMantenimiento();
    }//GEN-LAST:event_btn_actualizarMantenimientoActionPerformed

    private void btn_eliminarMantenimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarMantenimientoActionPerformed
        eliminarMantenimiento();
    }//GEN-LAST:event_btn_eliminarMantenimientoActionPerformed

    private void btn_registrarUbicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registrarUbicacionActionPerformed
        registrarUbicacion();
    }//GEN-LAST:event_btn_registrarUbicacionActionPerformed

    private void btn_actualizaUbicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizaUbicacionActionPerformed
        actualizarMinaTipoMineral();
    }//GEN-LAST:event_btn_actualizaUbicacionActionPerformed

    private void btn_eliminarUbicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarUbicacionActionPerformed
        eliminarUbicacion();
    }//GEN-LAST:event_btn_eliminarUbicacionActionPerformed

    private void btn_buscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscar1ActionPerformed
        buscarNombreMina();
    }//GEN-LAST:event_btn_buscar1ActionPerformed

    private void btn_buscar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscar2ActionPerformed
        buscarTipoMineral();
    }//GEN-LAST:event_btn_buscar2ActionPerformed

    private void txt_buscarNombreMinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_buscarNombreMinaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_buscarNombreMinaActionPerformed

    private void btn_buscar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscar3ActionPerformed
        buscarEmpleados();
    }//GEN-LAST:event_btn_buscar3ActionPerformed

    private void btn_buscar4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscar4ActionPerformed
        buscarProduccion();
    }//GEN-LAST:event_btn_buscar4ActionPerformed

    private void btn_buscar5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscar5ActionPerformed
        buscarEquipos();
    }//GEN-LAST:event_btn_buscar5ActionPerformed

    private void btn_buscar6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscar6ActionPerformed
        buscarMantenimientos();
    }//GEN-LAST:event_btn_buscar6ActionPerformed

    private void txt_buscarNombreTipoMinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_buscarNombreTipoMinaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_buscarNombreTipoMinaActionPerformed

    private void btn_regresarlogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_regresarlogoActionPerformed
        WelcomeHome ventana = new WelcomeHome();
        ventana.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_regresarlogoActionPerformed

    public void actualizar() throws SQLException {
        actualizarTablas();
        actualizarComboBox();
    }
    
    
    
    /*METODO PARA ACTUALIZAR*/
    public void actualizarTablas() throws SQLException {
        tbl_minas.setModel(Conexion.verVistas("ver_minas"));
        tbl_TipoMineral.setModel(Conexion.verVistas("ver_tipomineral"));
        tbl_empleados.setModel(Conexion.verVistas("ver_empleados"));
        tbl_produccion.setModel(Conexion.verVistas("ver_produccion"));
        tbl_equipos.setModel(Conexion.verVistas("ver_equipos"));
        tbl_mantenimiento.setModel(Conexion.verVistas("ver_mantenimiento"));
        tbl_minas_ubi.setModel(Conexion.verVistas("ver_ubicacion"));
    }
    
    public void actualizarComboBox() {
        Conexion.llenarComboBoxRelacionado(cbx_idUbiMin, "Ubicacion", "ubicacion_id", "ciudad_id", "nombre", "Ciudad");
        Conexion.llenarComboBox(cbx_estadoMin, "Estado_Mina", "estado_id", "nombre");
        Conexion.llenarComboBox(cbx_idEmpMin, "Empleados", "empleado_id", "nombre");
        Conexion.llenarComboBox(cbx_idEquipoMin, "Equipos", "equipo_id", "nombre_equipo");
        Conexion.llenarComboBox(cbx_idProdMin, "Produccion", "produccion_id", "mineral_extraido");
        Conexion.llenarComboBox(cbx_idTipoMina, "TipoMineral", "tipo_mineral_id", "nombre_tipo_mineral");
        Conexion.llenarComboBox(cbx_idEquiMant, "Equipos", "equipo_id", "nombre_equipo");
        Conexion.llenarComboBox(cbx_idCiudad, "Ciudad", "ciudad_id", "nombre");
    }
    
    private void Vista_MinaStateChanged(javax.swing.event.ChangeEvent evt) {                                         
        try {
            // TODO add your handling code here:
            actualizar();
        } catch (SQLException ex) {
            Logger.getLogger(MenuPrincipal_G1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }   
    /*METODO PARA VACIAR EL PANEL DE DATOS*/
    public static void vaciarDatos(JPanel panel) {
        for (Component object : panel.getComponents()) {
            if (object instanceof JTextField) {
                ((JTextField) object).setText("");
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal_G1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal_G1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal_G1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal_G1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPrincipal_G1().setVisible(true);
            }
        });
    }
    
    /**
     * GUARDAR LOS DATOS
     */
    
    private void registrarMina() {
        try {
            String nombre_mina = txt_NombreMina.getText();
            int ubicacion_id = Integer.valueOf(cbx_idUbiMin.getSelectedItem().toString().split("-")[0]);
            int capacidad_extraccion = Integer.parseInt(txt_capExtMina.getText());
            int empleado_id = Integer.valueOf(cbx_idEmpMin.getSelectedItem().toString().split("-")[0]);
            int equipos_id = Integer.valueOf(cbx_idEquipoMin.getSelectedItem().toString().split("-")[0]);
            int produccion_id = Integer.valueOf(cbx_idProdMin.getSelectedItem().toString().split("-")[0]);
            int tipo_mineral_id = Integer.valueOf(cbx_idTipoMina.getSelectedItem().toString().split("-")[0]);
            int estado = Integer.valueOf(cbx_estadoMin.getSelectedItem().toString().split("-")[0]);

            String sql = "exec sp_Inserta_Minas ?,?,?,?,?,?,?,?";
            PreparedStatement ps = Conexion.prepararConsultaSinResultado(sql);
            ps.setString(1, nombre_mina);
            ps.setInt(2, ubicacion_id);
            ps.setInt(3, capacidad_extraccion);
            ps.setInt(4, empleado_id);
            ps.setInt(5, equipos_id);
            ps.setInt(6, produccion_id);
            ps.setInt(7, tipo_mineral_id);
            ps.setInt(8, estado);
            ps.executeUpdate();

            JOptionPane.showMessageDialog(this, "Mina agregada con éxito");
            actualizar();
            vaciarDatos(datos_panel_mina);

        } catch (HeadlessException | NumberFormatException | SQLException ex1) {
            if (ex1 instanceof NumberFormatException) {
                JOptionPane.showMessageDialog(this, "No permite letras: ", "Error", JOptionPane.ERROR_MESSAGE);
            }
            SQLException ex = (SQLException) ex1;
            if (ex.getErrorCode() == 2627) {
                JOptionPane.showMessageDialog(this, "EXISTE UN REGISTRO CON ESE ID ", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                System.out.println(ex.getErrorCode());
                JOptionPane.showMessageDialog(this, "Error : " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void registarTipoMineral() {
        try {
            String nombre_tipo_mineral = txt_nombreTM.getText();
            String descripcion = txt_descripcionTM.getText();
            float densidad = Float.parseFloat(txt_densidadTM.getText());
            float punto_fusion = Float.parseFloat(txt_puntoFusTM.getText());
            float punto_ebullicion = Float.parseFloat(txt_puntoEbuTM.getText());

            String sql = "exec sp_Insertar_TipoMineral ?,?,?,?,?";
            PreparedStatement ps = Conexion.prepararConsultaSinResultado(sql);
            ps.setString(1, nombre_tipo_mineral);
            ps.setString(2, descripcion);
            ps.setFloat(3, densidad);
            ps.setFloat(4, punto_fusion);
            ps.setFloat(5, punto_ebullicion);
            ps.executeUpdate();

            JOptionPane.showMessageDialog(this, "Tipo de Mina agregada con éxito");
            actualizar();
            vaciarDatos(datos_panel_tipomineral);

        } catch (HeadlessException | NumberFormatException | SQLException ex1) {
            if (ex1 instanceof NumberFormatException) {
                JOptionPane.showMessageDialog(this, "No permite letras: ", "Error", JOptionPane.ERROR_MESSAGE);
            }
            SQLException ex = (SQLException) ex1;
            if (ex.getErrorCode() == 2627) {
                JOptionPane.showMessageDialog(this, "EXISTE UN REGISTRO CON ESE ID ", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                System.out.println(ex.getErrorCode());
                JOptionPane.showMessageDialog(this, "Error : " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    private void registrarEmpleado() {
    try {
        String nombre = txt_nombreEmpl.getText();
        String apellido = txt_ApellidoEmpl.getText();
        Date fecha_nacimiento = Date.valueOf(txt_FechaNacimientoEmpl.getText());
        String puesto = txt_puestoEmpl.getText();

        String sql = "exec sp_Insertar_Empleados ?,?,?,?";
        PreparedStatement ps = Conexion.prepararConsultaSinResultado(sql);
        ps.setString(1, nombre);
        ps.setString(2, apellido);
        ps.setDate(3, fecha_nacimiento);
        ps.setString(4, puesto);
        ps.executeUpdate();

        JOptionPane.showMessageDialog(this, "Empleado agregado con éxito");
        actualizar();
        vaciarDatos(datos_panel_empleado);

    } catch (NumberFormatException | SQLException ex1) {
        if (ex1 instanceof NumberFormatException) {
            JOptionPane.showMessageDialog(this, "No permite letras en el campo Mina ID", "Error", JOptionPane.ERROR_MESSAGE);
        }
        SQLException ex = (SQLException) ex1;
        if (ex.getErrorCode() == 2627) {
            JOptionPane.showMessageDialog(this, "Ya existe un registro con ese ID", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            System.out.println(ex.getErrorCode());
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
}

    private void registrarProduccion() {
        try {
            Date fecha = Date.valueOf(txt_fechaProd.getText());
            String mineral_extraido = txt_mineralExt.getText();
            int cantidad_extraida = Integer.parseInt(txt_cantidadExt.getText());

            String sql = "exec sp_Insertar_Produccion ?,?,?";
            PreparedStatement ps = Conexion.prepararConsultaSinResultado(sql);
            ps.setDate(1, fecha);
            ps.setString(2, mineral_extraido);
            ps.setInt(3, cantidad_extraida);
            ps.executeUpdate();

            JOptionPane.showMessageDialog(this, "Registro de producción agregado con éxito");
            actualizar();
            vaciarDatos(datos_panel_produccion);

        } catch (NumberFormatException | SQLException ex1) {
            if (ex1 instanceof NumberFormatException) {
                JOptionPane.showMessageDialog(this, "No permite letras en los campos de cantidad", "Error", JOptionPane.ERROR_MESSAGE);
            }
            SQLException ex = (SQLException) ex1;
            if (ex.getErrorCode() == 2627) {
                JOptionPane.showMessageDialog(this, "Ya existe un registro con ese ID de Mina", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                System.out.println(ex.getErrorCode());
                JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    private void registrarEquipo() {
    try {
        String nombre_equipo = txt_nombreEqui.getText();
        String tipo_equipo = txt_tipoEqui.getText();
        String estado = txt_estadoEqui.getText();

        String sql = "exec sp_Insertar_Equipo ?,?,?";
        PreparedStatement ps = Conexion.prepararConsultaSinResultado(sql);
        ps.setString(1, nombre_equipo);
        ps.setString(2, tipo_equipo);
        ps.setString(3, estado);
        ps.executeUpdate();

        JOptionPane.showMessageDialog(this, "Equipo registrado con éxito");
        actualizar();
        vaciarDatos(datos_panel_equipo);

    } catch (NumberFormatException | SQLException ex1) {
        if (ex1 instanceof NumberFormatException) {
            JOptionPane.showMessageDialog(this, "No permite letras en el campo de mina ID", "Error", JOptionPane.ERROR_MESSAGE);
        }
        SQLException ex = (SQLException) ex1;
        if (ex.getErrorCode() == 2627) {
            JOptionPane.showMessageDialog(this, "Ya existe un registro con ese ID de Mina", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            System.out.println(ex.getErrorCode());
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
}

    private void registrarMantenimiento() {
    try {
        Date fecha = Date.valueOf(txt_fechaMant.getText());
        int equipo_id = Integer.valueOf(cbx_idEquiMant.getSelectedItem().toString().split("-")[0]);
        String descripcion = txt_descripcionMant.getText();
        double costo = Double.parseDouble(txt_costoMant.getText());

        String sql = "exec sp_InsertarMantenimiento ?,?,?,?";
        PreparedStatement ps = Conexion.prepararConsultaSinResultado(sql);
        ps.setDate(1, fecha);
        ps.setInt(2, equipo_id);
        ps.setString(3, descripcion);
        ps.setDouble(4, costo);
        ps.executeUpdate();

        JOptionPane.showMessageDialog(this, "Mantenimiento registrado con éxito");
        actualizar();
        vaciarDatos(datos_panel_mantenimiento);

    } catch (NumberFormatException | SQLException ex1) {
        if (ex1 instanceof NumberFormatException) {
            JOptionPane.showMessageDialog(this, "No se permiten letras en los campos de equipo ID y costo", "Error", JOptionPane.ERROR_MESSAGE);
        }
        SQLException ex = (SQLException) ex1;
        if (ex.getErrorCode() == 2627) {
            JOptionPane.showMessageDialog(this, "Ya existe un registro con ese ID de Equipo", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            System.out.println(ex.getErrorCode());
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
}
    
    private void registrarUbicacion() {
    try {
        int ciudad_id = Integer.valueOf(cbx_idCiudad.getSelectedItem().toString().split("-")[0]);
        String latitud = txt_latitud.getText();
        String longitud = txt_longitud.getText();
        String altitud = txt_altitud.getText();
        
        String sql = "exec sp_InsertarUbicacion ?,?,?,?";
        PreparedStatement ps = Conexion.prepararConsultaSinResultado(sql);
        ps.setInt(1, ciudad_id);
        ps.setString(2, latitud);
        ps.setString(3, longitud);
        ps.setString(4, altitud);
        ps.executeUpdate();

        JOptionPane.showMessageDialog(this, "Ubicación registrada con éxito");
        actualizar();
        vaciarDatos(datos_panel_ubicacion);

    } catch (SQLException ex) {
        System.out.println(ex.getErrorCode());
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}

    /*METODO PARA ELIMINAR LOS DATOS*/
    private void eliminarMina() {
    try {
        PreparedStatement ps = Conexion.prepararConsultaSinResultado("EXEC sp_EliminarMinas @mina_id = ?");
        ps.setInt(1, Integer.valueOf(tbl_minas.getValueAt(tbl_minas.getSelectedRow(), 0).toString()));
        int res = ps.executeUpdate();
        if (res > 0) {
            JOptionPane.showMessageDialog(null, "La Mina ha sido eliminada correctamente",
                    "Mina Eliminada", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Error al eliminar Mina",
                    "Mina no Eliminada", JOptionPane.INFORMATION_MESSAGE);
        }
        actualizar();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e.toString(), "Error",
                JOptionPane.INFORMATION_MESSAGE);
    }
}
    
    private void eliminarTipoMina() {
    try {
        PreparedStatement ps = Conexion.prepararConsultaSinResultado("EXEC sp_EliminarTipoMineral @tipo_mineral_id = ?");
        ps.setInt(1, Integer.valueOf(tbl_TipoMineral.getValueAt(tbl_TipoMineral.getSelectedRow(), 0).toString()));
        int res = ps.executeUpdate();
        if (res > 0) {
            JOptionPane.showMessageDialog(null, "El tipo de mineral ha sido eliminado correctamente",
                    "Tipo de Mineral Eliminado", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Error al eliminar tipo de mineral",
                    "Tipo de Mineral no Eliminado", JOptionPane.INFORMATION_MESSAGE);
        }
        actualizar();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e.toString(), "Error",
                JOptionPane.INFORMATION_MESSAGE);
    }
}
    
    private void eliminarUbicacion() {
    try {
        PreparedStatement ps = Conexion.prepararConsultaSinResultado("EXEC sp_EliminarUbicacion @ubicacion_id = ?");
        ps.setInt(1, Integer.valueOf(tbl_minas_ubi.getValueAt(tbl_minas_ubi.getSelectedRow(), 0).toString()));
        int res = ps.executeUpdate();
        if (res > 0) {
            JOptionPane.showMessageDialog(null, "La ubicación ha sido eliminada correctamente",
                    "Ubicación Eliminada", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Error al eliminar la relación entre la mina y el tipo de mineral",
                    "Ubicación no Eliminada", JOptionPane.INFORMATION_MESSAGE);
        }
        actualizar();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e.toString(), "Error",
                JOptionPane.INFORMATION_MESSAGE);
    }
}

    private void eliminarEmpleado() {
    try {
        PreparedStatement ps = Conexion.prepararConsultaSinResultado("EXEC sp_EliminarEmpleado @empleado_id = ?");
        ps.setInt(1, Integer.valueOf(tbl_empleados.getValueAt(tbl_empleados.getSelectedRow(), 0).toString()));
        int res = ps.executeUpdate();
        if (res > 0) {
            JOptionPane.showMessageDialog(null, "El empleado ha sido eliminado correctamente",
                    "Empleado Eliminado", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Error al eliminar empleado",
                    "Empleado no Eliminado", JOptionPane.INFORMATION_MESSAGE);
        }
        actualizar();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e.toString(), "Error",
                JOptionPane.INFORMATION_MESSAGE);
    }
}
    
    private void eliminarEquipo() {
    try {
        PreparedStatement ps = Conexion.prepararConsultaSinResultado("EXEC sp_EliminarEquipo @equipo_id = ?");
        ps.setInt(1, Integer.valueOf(tbl_equipos.getValueAt(tbl_equipos.getSelectedRow(), 0).toString()));
        int res = ps.executeUpdate();
        if (res > 0) {
            JOptionPane.showMessageDialog(null, "El equipo ha sido eliminado correctamente",
                    "Equipo Eliminado", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Error al eliminar equipo",
                    "Equipo no Eliminado", JOptionPane.INFORMATION_MESSAGE);
        }
        actualizar();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e.toString(), "Error",
                JOptionPane.INFORMATION_MESSAGE);
    }
}

    private void eliminarMantenimiento() {
    try {
        PreparedStatement ps = Conexion.prepararConsultaSinResultado("EXEC sp_EliminarMantenimiento @mantenimiento_id = ?");
        ps.setInt(1, Integer.valueOf(tbl_mantenimiento.getValueAt(tbl_mantenimiento.getSelectedRow(), 0).toString()));
        int res = ps.executeUpdate();
        if (res > 0) {
            JOptionPane.showMessageDialog(null, "El registro de mantenimiento ha sido eliminado correctamente",
                    "Registro de Mantenimiento Eliminado", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Error al eliminar registro de mantenimiento",
                    "Registro de Mantenimiento no Eliminado", JOptionPane.INFORMATION_MESSAGE);
        }
        actualizar();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e.toString(), "Error",
                JOptionPane.INFORMATION_MESSAGE);
    }
}
    
    private void eliminarProduccion() {
    try {
        PreparedStatement ps = Conexion.prepararConsultaSinResultado("EXEC sp_EliminarProduccion @produccion_id = ?");
        ps.setInt(1, Integer.valueOf(tbl_produccion.getValueAt(tbl_produccion.getSelectedRow(), 0).toString()));
        int res = ps.executeUpdate();
        if (res > 0) {
            JOptionPane.showMessageDialog(null, "El registro de producción ha sido eliminado correctamente",
                    "Registro de Producción Eliminado", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Error al eliminar registro de producción",
                    "Registro de Producción no Eliminado", JOptionPane.INFORMATION_MESSAGE);
        }
        actualizar();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e.toString(), "Error",
                JOptionPane.INFORMATION_MESSAGE);
    }
}

/*METODO PARA BUSCAR CAMPOS*/
    private void buscarNombreMina() {
    String nombre = txt_buscarNombreMina.getText(); // Reemplaza txtBuscarNombre con el nombre de tu campo de búsqueda
    DefaultTableModel modeloTabla = (DefaultTableModel) tbl_minas.getModel(); // Reemplaza tablaMinas con el nombre de tu tabla en la interfaz gráfica
    modeloTabla.setRowCount(0); // Limpiar la tabla antes de realizar la búsqueda

    try {
        String sql = "SELECT mina_id, nombre_mina, ubicacion_id, capacidad_extraccion, empleado_id, equipos_id, produccion_id, estado FROM Minas WHERE nombre_mina LIKE ?";
        PreparedStatement ps = Conexion.prepararConsultaSinResultado(sql);
        ps.setString(1, "%" + nombre + "%");
        ResultSet rs = ps.executeQuery();

        while (rs.next()) {
            int minaid = rs.getInt("mina_id");
            String nombreMina = rs.getString("nombre_mina");
            int ubicacion_id = rs.getInt("ubicacion_id");
            int capacidadExtraccion = rs.getInt("capacidad_extraccion");
            int empleado_id = rs.getInt("empleado_id");
            int equipos_id = rs.getInt("equipos_id");
            int produccion_id = rs.getInt("produccion_id");
            int estado = rs.getInt("estado");

            // Agregar los datos a la tabla
            Object[] fila = {minaid, nombreMina, ubicacion_id, capacidadExtraccion, empleado_id, equipos_id, produccion_id, estado};
            modeloTabla.addRow(fila);
        }

        // Cerrar los recursos (ResultSet, PreparedStatement) después de usarlos
        rs.close();
        ps.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al buscar mina por nombre: " + e.getMessage(), "Error de Búsqueda", JOptionPane.ERROR_MESSAGE);
    }
}
    private void buscarTipoMineral() {
    String nombre = txt_buscarNombreTipoMina.getText(); // Reemplaza txtBuscarNombre con el nombre de tu campo de búsqueda
    DefaultTableModel modeloTabla = (DefaultTableModel) tbl_TipoMineral.getModel(); // Reemplaza tablaMinas con el nombre de tu tabla en la interfaz gráfica
    modeloTabla.setRowCount(0); // Limpiar la tabla antes de realizar la búsqueda

    try {
        String sql = "SELECT tipo_mineral_id, nombre_tipo_mineral, descripcion, densidad, punto_fusion, punto_ebullicion FROM TipoMineral WHERE nombre_tipo_mineral LIKE ?";
        PreparedStatement ps = Conexion.prepararConsultaSinResultado(sql);
        ps.setString(1, "%" + nombre + "%");
        ResultSet rs = ps.executeQuery();

        while (rs.next()) {
            int tipo_mineral_id = rs.getInt("tipo_mineral_id");
            String nombre_tipo_mineral = rs.getString("nombre_tipo_mineral");
            String descripcion = rs.getString("descripcion");
            float densidad = rs.getFloat("densidad");
            float punto_fusion = rs.getFloat("punto_fusion");
            float punto_ebullicion = rs.getFloat("punto_ebullicion");
            
            // Agregar los datos a la tabla
            Object[] fila = {tipo_mineral_id, nombre_tipo_mineral, descripcion, densidad, punto_fusion, punto_ebullicion};
            modeloTabla.addRow(fila);
        }

        // Cerrar los recursos (ResultSet, PreparedStatement) después de usarlos
        rs.close();
        ps.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al buscar Tipo de mineral por nombre: " + e.getMessage(), "Error de Búsqueda", JOptionPane.ERROR_MESSAGE);
    }
}

    
    private void buscarEmpleados() {
    String nombre = txt_buscarNombreEmpleado.getText(); // Reemplaza txtBuscarNombre con el nombre de tu campo de búsqueda
    DefaultTableModel modeloTabla = (DefaultTableModel) tbl_empleados.getModel(); // Reemplaza tblEmpleados con el nombre de tu tabla en la interfaz gráfica
    modeloTabla.setRowCount(0); // Limpiar la tabla antes de realizar la búsqueda

    try {
        String sql = "SELECT empleado_id, nombre, apellido, fecha_nacimiento, puesto FROM Empleados WHERE nombre LIKE ?";
        PreparedStatement ps = Conexion.prepararConsultaSinResultado(sql);
        ps.setString(1, "%" + nombre + "%");
        ResultSet rs = ps.executeQuery();

        while (rs.next()) {
            int empleadoId = rs.getInt("empleado_id");
            String nombreEmpleado = rs.getString("nombre");
            String apellido = rs.getString("apellido");
            Date fechaNacimiento = rs.getDate("fecha_nacimiento");
            String puesto = rs.getString("puesto");

            // Agregar los datos a la tabla
            Object[] fila = {empleadoId, nombreEmpleado, apellido, fechaNacimiento, puesto};
            modeloTabla.addRow(fila);
        }

        // Cerrar los recursos (ResultSet, PreparedStatement) después de usarlos
        rs.close();
        ps.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al buscar empleados por nombre: " + e.getMessage(), "Error de Búsqueda", JOptionPane.ERROR_MESSAGE);
    }
}


    private void buscarProduccion() {
    String fechita = txt_buscarNombreProduccion.getText(); // Reemplaza txtBuscarMineralExtraido con el nombre de tu campo de búsqueda
    DefaultTableModel modeloTabla = (DefaultTableModel) tbl_produccion.getModel(); // Reemplaza tblProduccion con el nombre de tu tabla en la interfaz gráfica
    modeloTabla.setRowCount(0); // Limpiar la tabla antes de realizar la búsqueda

    try {
        String sql = "SELECT produccion_id, fecha, mineral_extraido, cantidad_extraida FROM Produccion WHERE fecha LIKE ?;";
        PreparedStatement ps = Conexion.prepararConsultaSinResultado(sql);
        ps.setString(1, "%" + fechita + "%");
        ResultSet rs = ps.executeQuery();

        while (rs.next()) {
            int produccionId = rs.getInt("produccion_id");
            Date fecha = rs.getDate("fecha");
            String mineral_Extraido = rs.getString("mineral_extraido");
            int cantidadExtraida = rs.getInt("cantidad_extraida");

            // Agregar los datos a la tabla
            Object[] fila = {produccionId, fecha, mineral_Extraido, cantidadExtraida};
            modeloTabla.addRow(fila);
        }

        // Cerrar los recursos (ResultSet, PreparedStatement) después de usarlos
        rs.close();
        ps.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al buscar producciones por Fecha: " + e.getMessage(), "Error de Búsqueda", JOptionPane.ERROR_MESSAGE);
    }
}

    private void buscarEquipos() {
    String nombreEquipo = txt_buscarNombreEquipo.getText(); // Reemplaza txtBuscarNombreEquipo con el nombre de tu campo de búsqueda
    DefaultTableModel modeloTabla = (DefaultTableModel) tbl_equipos.getModel(); // Reemplaza tblEquipos con el nombre de tu tabla en la interfaz gráfica
    modeloTabla.setRowCount(0); // Limpiar la tabla antes de realizar la búsqueda

    try {
        String sql = "SELECT equipo_id, nombre_equipo, tipo_equipo, estado FROM Equipos WHERE nombre_equipo LIKE ?;";
        PreparedStatement ps = Conexion.prepararConsultaSinResultado(sql);
        ps.setString(1, "%" + nombreEquipo + "%");
        ResultSet rs = ps.executeQuery();

        while (rs.next()) {
            int equipoId = rs.getInt("equipo_id");
            String nombre_Equipo = rs.getString("nombre_equipo");
            String tipoEquipo = rs.getString("tipo_equipo");
            String estado = rs.getString("estado");

            // Agregar los datos a la tabla
            Object[] fila = {equipoId, nombre_Equipo, tipoEquipo, estado};
            modeloTabla.addRow(fila);
        }

        // Cerrar los recursos (ResultSet, PreparedStatement) después de usarlos
        rs.close();
        ps.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al buscar equipos por nombre: " + e.getMessage(), "Error de Búsqueda", JOptionPane.ERROR_MESSAGE);
    }
}

    private void buscarMantenimientos() {
    String fechita_Mant = txt_buscarFechaMant.getText(); // Reemplaza txtBuscarDescripcion con el nombre de tu campo de búsqueda
    DefaultTableModel modeloTabla = (DefaultTableModel) tbl_mantenimiento.getModel(); // Reemplaza tblMantenimientos con el nombre de tu tabla en la interfaz gráfica
    modeloTabla.setRowCount(0); // Limpiar la tabla antes de realizar la búsqueda

    try {
        String sql = "SELECT mantenimiento_id, fecha, equipo_id, descripcion, costo FROM Mantenimiento WHERE fecha LIKE ?";
        PreparedStatement ps = Conexion.prepararConsultaSinResultado(sql);
        ps.setString(1, "%" + fechita_Mant + "%");
        ResultSet rs = ps.executeQuery();

        while (rs.next()) {
            int mantenimientoId = rs.getInt("mantenimiento_id");
            Date fecha = rs.getDate("fecha");
            int equipoId = rs.getInt("equipo_id");
            String descripcion = rs.getString("descripcion");
            Double costo = rs.getDouble("costo");

            // Agregar los datos a la tabla
            Object[] fila = {mantenimientoId, fecha, equipoId, descripcion, costo};
            modeloTabla.addRow(fila);
        }

        // Cerrar los recursos (ResultSet, PreparedStatement) después de usarlos
        rs.close();
        ps.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al buscar mantenimientos por fecha: " + e.getMessage(), "Error de Búsqueda", JOptionPane.ERROR_MESSAGE);
    }
}

/*METODOS PARA ACTUALIZAR*/
    
private void actualizarMina() {
    // Mostrar cuadro de diálogo para ingresar la ID de la mina
    String minaIdString = JOptionPane.showInputDialog(this, "Ingrese la ID de la mina a actualizar:", "Actualizar Mina", JOptionPane.PLAIN_MESSAGE);
    
    // Verificar si se ingresó un valor válido
    if (minaIdString == null || minaIdString.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Debe ingresar una ID válida", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    try {
        int minaId = Integer.parseInt(minaIdString);

        // Consultar la base de datos para obtener los datos de la mina
        String sql = "SELECT nombre_mina, ubicacion_id, capacidad_extraccion, empleado_id, equipos_id, produccion_id, estado FROM Minas WHERE mina_id = ?";
        PreparedStatement ps = Conexion.prepararConsultaSinResultado(sql);
        ps.setInt(1, minaId);
        ResultSet rs = ps.executeQuery();

        // Verificar si se encontraron resultados
        if (rs.next()) {
            // Obtener los valores de los campos correspondientes
            String nombreMina = rs.getString("nombre_mina");
            int ubicacion_id = rs.getInt("ubicacion_id");
            int capacidadExtraccion = rs.getInt("capacidad_extraccion");
            int empleado_id = rs.getInt("empleado_id");
            int equipos_id = rs.getInt("equipos_id");
            int produccion_id = rs.getInt("produccion_id");
            int estado = rs.getInt("estado");

            // Crear un nuevo diálogo para modificar los datos
            JDialog dialogo = new JDialog();
            dialogo.setTitle("Modificar Mina");
            dialogo.setModal(true);
            dialogo.setLayout(new GridLayout(4, 2));

            // Campos de texto para ingresar los nuevos valores
            JTextField txtNuevoNombre = new JTextField(nombreMina);
            JTextField txtNuevaUbicacion = new JTextField(ubicacion_id);
            JTextField txtNuevaCapacidad = new JTextField(String.valueOf(capacidadExtraccion));
            JTextField txtNuevoEmpleado = new JTextField(empleado_id);
            JTextField txtNuevaEquipo = new JTextField(equipos_id);
            JTextField txtNuevaProduccion = new JTextField(produccion_id);
            JTextField txtNuevaEstado = new JTextField(estado);
            // Agregar los campos al diálogo
            dialogo.add(new JLabel("Nuevo Nombre de la Mina:"));
            dialogo.add(txtNuevoNombre);
            dialogo.add(new JLabel("Nueva Ubicación:"));
            dialogo.add(txtNuevaUbicacion);
            dialogo.add(new JLabel("Nueva Capacidad de Extracción:"));
            dialogo.add(txtNuevaCapacidad);
            dialogo.add(new JLabel("Nuevo Empleado:"));
            dialogo.add(txtNuevoEmpleado);
            dialogo.add(new JLabel("Nuevo Equipo:"));
            dialogo.add(txtNuevaEquipo);
            dialogo.add(new JLabel("Nueva Producción:"));
            dialogo.add(txtNuevaProduccion);
            dialogo.add(new JLabel("Nuevo Estado:"));
            dialogo.add(txtNuevaEstado);

            // Botón para actualizar los datos
            JButton btnActualizarDatos = new JButton("Actualizar");
            btnActualizarDatos.addActionListener((ActionEvent e) -> {
                try {
                    // Obtener los nuevos valores ingresados
                    String nuevoNombre = txtNuevoNombre.getText();
                    int nuevaUbicacion = Integer.parseInt(txtNuevaUbicacion.getText());
                    int nuevaCapacidad = Integer.parseInt(txtNuevaCapacidad.getText());
                    int nuevoEmpleado = Integer.parseInt(txtNuevoEmpleado.getText());
                    int nuevoEquipo = Integer.parseInt(txtNuevaEquipo.getText());
                    int nuevaProduccion = Integer.parseInt(txtNuevaProduccion.getText());
                    int nuevaEstado = Integer.parseInt(txtNuevaEstado.getText());
                    
                    // Actualizar los datos en la base de datos
                    String updateSql = "UPDATE Minas SET nombre_mina = ?, ubicacion_id = ?, capacidad_extraccion = ?, empleado_id = ?, equipos_id = ?, produccion_id = ?, estado = ? WHERE mina_id = ?";
                    PreparedStatement updatePs = Conexion.prepararConsultaSinResultado(updateSql);
                    updatePs.setString(1, nuevoNombre);
                    updatePs.setInt(2, nuevaUbicacion);
                    updatePs.setInt(3, nuevaCapacidad);
                    updatePs.setInt(4, nuevoEmpleado);
                    updatePs.setInt(5, nuevoEquipo);
                    updatePs.setInt(6, nuevaProduccion);
                    updatePs.setInt(7, nuevaEstado);
                    updatePs.executeUpdate();

                    // Mostrar mensaje de confirmación
                    JOptionPane.showMessageDialog(dialogo, "Datos de la mina actualizados correctamente", "Actualización de Mina", JOptionPane.INFORMATION_MESSAGE);
                    dialogo.dispose(); // Cerrar el diálogo

                    // Actualizar la tabla de minas en la interfaz principal
                    actualizar();
                } catch (NumberFormatException | SQLException ex) {
                    JOptionPane.showMessageDialog(dialogo, "Error al actualizar la mina: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            });

            // Agregar el botón al diálogo
            dialogo.add(new JPanel()); // Espacio vacío
            dialogo.add(btnActualizarDatos);

            // Ajustar el tamaño y la posición del diálogo
            dialogo.pack();
            dialogo.setLocationRelativeTo(this); // Centrar en la ventana principal
            dialogo.setVisible(true);
        } else {
            // Si no se encontraron resultados, mostrar un mensaje de error
            JOptionPane.showMessageDialog(this, "No se encontró una mina con la ID ingresada", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (NumberFormatException | SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al buscar la mina: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

}
    
private void actualizarTipoMina() {
    // Mostrar cuadro de diálogo para ingresar la ID de la mina
    String tipo_mineral_IdString = JOptionPane.showInputDialog(this, "Ingrese el ID del Tipo de Mineral a actualizar:", "Actualizar Mineral", JOptionPane.PLAIN_MESSAGE);
    
    // Verificar si se ingresó un valor válido
    if (tipo_mineral_IdString == null || tipo_mineral_IdString.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Debe ingresar una ID válida", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    try {
        int tipo_mineral_id = Integer.parseInt(tipo_mineral_IdString);

        // Consultar la base de datos para obtener los datos de la mina
        String sql = "SELECT nombre_tipo_mineral, descripcion, densidad, punto_fusion, punto_ebullicion FROM TipoMineral WHERE tipo_mineral_id = ?";
        PreparedStatement ps = Conexion.prepararConsultaSinResultado(sql);
        ps.setInt(1, tipo_mineral_id);
        ResultSet rs = ps.executeQuery();

        // Verificar si se encontraron resultados
        if (rs.next()) {
            // Obtener los valores de los campos correspondientes
            String nombre_tipo_mineral = rs.getString("nombre_tipo_mineral");
            String descripcion = rs.getString("descripcion");
            int densidad = rs.getInt("densidad");
            int punto_fusion = rs.getInt("punto_fusion");
            int punto_ebullicion = rs.getInt("punto_ebullicion");

            // Crear un nuevo diálogo para modificar los datos
            JDialog dialogo = new JDialog();
            dialogo.setTitle("Modificar Tipo de Mineral");
            dialogo.setModal(true);
            dialogo.setLayout(new GridLayout(6, 2));

            // Campos de texto para ingresar los nuevos valores
            JTextField txtNuevoNombre = new JTextField(nombre_tipo_mineral);
            JTextField txtNuevaDescripcion = new JTextField(descripcion);
            JTextField txtNuevaDensidad = new JTextField(String.valueOf(densidad));
            JTextField txtNuevaPuntoFusion = new JTextField(String.valueOf(punto_fusion));
            JTextField txtNuevaPuntoEbullicion = new JTextField(String.valueOf(punto_ebullicion));

            // Agregar los campos al diálogo
            dialogo.add(new JLabel("Nuevo Nombre del Mineral:"));
            dialogo.add(txtNuevoNombre);
            dialogo.add(new JLabel("Nueva Descripción:"));
            dialogo.add(txtNuevaDescripcion);
            dialogo.add(new JLabel("Nueva Densidad:"));
            dialogo.add(txtNuevaDensidad);
            dialogo.add(new JLabel("Nuevo Punto de Fusión:"));
            dialogo.add(txtNuevaPuntoFusion);
            dialogo.add(new JLabel("Nuevo Punto de Ebullición:"));
            dialogo.add(txtNuevaPuntoEbullicion);
            
            // Botón para actualizar los datos
            JButton btnActualizarDatos = new JButton("Actualizar");
            btnActualizarDatos.addActionListener((ActionEvent e) -> {
                try {
                    // Obtener los nuevos valores ingresados
                    String nuevoNombre = txtNuevoNombre.getText();
                    String nuevaDescripcion = txtNuevaDescripcion.getText();
                    int nuevaDensidad = Integer.parseInt(txtNuevaDensidad.getText());
                    int nuevaPuntoFusion = Integer.parseInt(txtNuevaPuntoFusion.getText());
                    int nuevaPuntoEbullicion = Integer.parseInt(txtNuevaPuntoEbullicion.getText());

                    // Actualizar los datos en la base de datos
                    String updateSql = "UPDATE TipoMineral SET nombre_tipo_mineral = ?, descripcion = ?, densidad = ?, "
                            + "punto_fusion = ?, punto_ebullicion = ? WHERE tipo_mineral_id = ?";
                    PreparedStatement updatePs = Conexion.prepararConsultaSinResultado(updateSql);
                    updatePs.setString(1, nuevoNombre);
                    updatePs.setString(2, nuevaDescripcion);
                    updatePs.setInt(3, nuevaDensidad);
                    updatePs.setInt(4, nuevaPuntoFusion);
                    updatePs.setInt(5, nuevaPuntoEbullicion);
                    updatePs.setInt(6, tipo_mineral_id);
                    updatePs.executeUpdate();

                    // Mostrar mensaje de confirmación
                    JOptionPane.showMessageDialog(dialogo, "Datos del Mineral actualizados correctamente", "Actualización de Mineral", JOptionPane.INFORMATION_MESSAGE);
                    dialogo.dispose(); // Cerrar el diálogo

                    // Actualizar la tabla de minas en la interfaz principal
                    actualizar();
                } catch (NumberFormatException | SQLException ex) {
                    JOptionPane.showMessageDialog(dialogo, "Error al actualizar el Mineral: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            });

            // Agregar el botón al diálogo
            dialogo.add(new JPanel()); // Espacio vacío
            dialogo.add(btnActualizarDatos);

            // Ajustar el tamaño y la posición del diálogo
            dialogo.pack();
            dialogo.setLocationRelativeTo(this); // Centrar en la ventana principal
            dialogo.setVisible(true);
        } else {
            // Si no se encontraron resultados, mostrar un mensaje de error
            JOptionPane.showMessageDialog(this, "No se encontró un mineral con la ID ingresada", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (NumberFormatException | SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al buscar el mineral: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

}

private void actualizarEmpleado() {
    // Mostrar cuadro de diálogo para ingresar la ID de la mina
    String empleadoIdString = JOptionPane.showInputDialog(this, "Ingrese el ID del Empleado a actualizar:", 
            "Actualizar Empleado", JOptionPane.PLAIN_MESSAGE);
    
    // Verificar si se ingresó un valor válido
    if (empleadoIdString == null || empleadoIdString.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Debe ingresar una ID válida", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    try {
        int empleado_id = Integer.parseInt(empleadoIdString);

        // Consultar la base de datos para obtener los datos de la mina
        String sql = "SELECT puesto FROM Empleados WHERE empleado_id = ?";
        PreparedStatement ps = Conexion.prepararConsultaSinResultado(sql);
        ps.setInt(1, empleado_id);
        ResultSet rs = ps.executeQuery();

        // Verificar si se encontraron resultados
        if (rs.next()) {
            // Obtener los valores de los campos correspondientes
            String puesto = rs.getString("puesto");

            // Crear un nuevo diálogo para modificar los datos
            JDialog dialogo = new JDialog();
            dialogo.setTitle("Modificar Empleado");
            dialogo.setModal(true);
            dialogo.setLayout(new GridLayout(3, 2));

            // Campos de texto para ingresar los nuevos valores
            JTextField txtNuevoPuesto = new JTextField(String.valueOf(puesto));

            // Agregar los campos al diálogo
            dialogo.add(new JLabel("Nuevo Puesto:"));
            dialogo.add(txtNuevoPuesto);
            
            // Botón para actualizar los datos
            JButton btnActualizarDatos = new JButton("Actualizar");
            btnActualizarDatos.addActionListener((ActionEvent e) -> {
                try {
                    // Obtener los nuevos valores ingresados
                    String nuevoPuesto = txtNuevoPuesto.getText();

                    // Actualizar los datos en la base de datos
                    String updateSql = "UPDATE Empleados SET puesto = ? WHERE empleado_id = ?";
                    PreparedStatement updatePs = Conexion.prepararConsultaSinResultado(updateSql);
                    updatePs.setString(1, nuevoPuesto);
                    updatePs.setInt(2, empleado_id);
                    updatePs.executeUpdate();

                    // Mostrar mensaje de confirmación
                    JOptionPane.showMessageDialog(dialogo, "Datos del Empleado actualizados correctamente", "Actualización de Empleado", JOptionPane.INFORMATION_MESSAGE);
                    dialogo.dispose(); // Cerrar el diálogo

                    // Actualizar la tabla de minas en la interfaz principal
                    actualizar();
                } catch (NumberFormatException | SQLException ex) {
                    JOptionPane.showMessageDialog(dialogo, "Error al actualizar al Empleado: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            });

            // Agregar el botón al diálogo
            dialogo.add(new JPanel()); // Espacio vacío
            dialogo.add(btnActualizarDatos);

            // Ajustar el tamaño y la posición del diálogo
            dialogo.pack();
            dialogo.setLocationRelativeTo(this); // Centrar en la ventana principal
            dialogo.setVisible(true);
        } else {
            // Si no se encontraron resultados, mostrar un mensaje de error
            JOptionPane.showMessageDialog(this, "No se encontró un Empleado con la ID ingresada", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (NumberFormatException | SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al buscar el Empleado: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}

private void actualizarProduccion() {
    // Mostrar cuadro de diálogo para ingresar la ID de la producción a actualizar
    String produccionIdString = JOptionPane.showInputDialog(this, "Ingrese el ID de la producción a actualizar:",
            "Actualizar Producción", JOptionPane.PLAIN_MESSAGE);

    // Verificar si se ingresó un valor válido
    if (produccionIdString == null || produccionIdString.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Debe ingresar una ID válida", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        int produccionId = Integer.parseInt(produccionIdString);

        // Consultar la base de datos para obtener los datos de la producción
        String sql = "SELECT fecha, mineral_extraido, cantidad_extraida FROM Produccion WHERE produccion_id = ?";
        PreparedStatement ps = Conexion.prepararConsultaSinResultado(sql);
        ps.setInt(1, produccionId);
        ResultSet rs = ps.executeQuery();

        // Verificar si se encontraron resultados
        if (rs.next()) {
            // Obtener los valores de los campos correspondientes
            Date fecha = rs.getDate("fecha");
            String mineralExtraido = rs.getString("mineral_extraido");
            int cantidadExtraida = rs.getInt("cantidad_extraida");

            // Crear un nuevo diálogo para modificar los datos
            JDialog dialogo = new JDialog();
            dialogo.setTitle("Actualizar Producción");
            dialogo.setModal(true);
            dialogo.setLayout(new GridLayout(5, 2));

            // Campos de texto para ingresar los nuevos valores
            JTextField txtNuevaFecha = new JTextField(String.valueOf(fecha));
            JTextField txtNuevoMineralExtraido = new JTextField(mineralExtraido);
            JTextField txtNuevaCantidadExtraida = new JTextField(String.valueOf(cantidadExtraida));

            // Agregar los campos al diálogo
            dialogo.add(new JLabel("Nueva Fecha:"));
            dialogo.add(txtNuevaFecha);
            dialogo.add(new JLabel("Nuevo Mineral Extraído:"));
            dialogo.add(txtNuevoMineralExtraido);
            dialogo.add(new JLabel("Nueva Cantidad Extraída:"));
            dialogo.add(txtNuevaCantidadExtraida);

            // Botón para actualizar los datos
            JButton btnActualizarDatos = new JButton("Actualizar");
            btnActualizarDatos.addActionListener((ActionEvent e) -> {
                try {
                    // Obtener los nuevos valores ingresados
                    Date nuevaFecha = Date.valueOf(txtNuevaFecha.getText());
                    String nuevoMineralExtraido = txtNuevoMineralExtraido.getText();
                    int nuevaCantidadExtraida = Integer.parseInt(txtNuevaCantidadExtraida.getText());

                    // Actualizar los datos en la base de datos
                    String updateSql = "UPDATE Produccion SET fecha = ?, mineral_extraido = ?, cantidad_extraida = ? WHERE produccion_id = ?";
                    PreparedStatement updatePs = Conexion.prepararConsultaSinResultado(updateSql);
                    updatePs.setDate(1, nuevaFecha);
                    updatePs.setString(2, nuevoMineralExtraido);
                    updatePs.setInt(3, nuevaCantidadExtraida);
                    updatePs.setInt(4, produccionId);
                    updatePs.executeUpdate();

                    // Mostrar mensaje de confirmación
                    JOptionPane.showMessageDialog(dialogo, "Datos de la producción actualizados correctamente", "Actualización de Producción", JOptionPane.INFORMATION_MESSAGE);
                    dialogo.dispose(); // Cerrar el diálogo

                    // Actualizar la tabla de producciones en la interfaz principal
                    actualizar();
                } catch (NumberFormatException | SQLException ex) {
                    JOptionPane.showMessageDialog(dialogo, "Error al actualizar la producción: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            });

            // Agregar el botón al diálogo
            dialogo.add(new JPanel()); // Espacio vacío
            dialogo.add(btnActualizarDatos);

            // Ajustar el tamaño y la posición del diálogo
            dialogo.pack();
            dialogo.setLocationRelativeTo(this); // Centrar en la ventana principal
            dialogo.setVisible(true);
        } else {
            // Si no se encontraron resultados, mostrar un mensaje de error
            JOptionPane.showMessageDialog(this, "No se encontró una producción con la ID ingresada", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (NumberFormatException | SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al buscar la producción: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}

private void actualizarEquipos() {
    // Mostrar cuadro de diálogo para ingresar la ID de la mina
    String equipoIdString = JOptionPane.showInputDialog(this, "Ingrese el ID del Equipo a actualizar:", 
            "Actualizar Equipo", JOptionPane.PLAIN_MESSAGE);
    
    // Verificar si se ingresó un valor válido
    if (equipoIdString == null || equipoIdString.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Debe ingresar una ID válida", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    try {
        int equipo_id = Integer.parseInt(equipoIdString);

        // Consultar la base de datos para obtener los datos de la mina
        String sql = "SELECT nombre_equipo, estado FROM Equipos WHERE equipo_id = ?";
        PreparedStatement ps = Conexion.prepararConsultaSinResultado(sql);
        ps.setInt(1, equipo_id);
        ResultSet rs = ps.executeQuery();

        // Verificar si se encontraron resultados
        if (rs.next()) {
            // Obtener los valores de los campos correspondientes
            String nombre_equipo = rs.getString("nombre_equipo");
            String estado = rs.getString("estado");

            // Crear un nuevo diálogo para modificar los datos
            JDialog dialogo = new JDialog();
            dialogo.setTitle("Modificar Equipo");
            dialogo.setModal(true);
            dialogo.setLayout(new GridLayout(3, 2));

            // Campos de texto para ingresar los nuevos valores
            JTextField txtNuevoNombreEquipo = new JTextField(String.valueOf(nombre_equipo));
            JTextField txtNuevoEstado = new JTextField(String.valueOf(estado));

            // Agregar los campos al diálogo
            dialogo.add(new JLabel("Nuevo Nombre del Equipo:"));
            dialogo.add(txtNuevoNombreEquipo);
            dialogo.add(new JLabel("Nuevo Estado del Equipo:"));
            dialogo.add(txtNuevoEstado);
            
            // Botón para actualizar los datos
            JButton btnActualizarDatos = new JButton("Actualizar");
            btnActualizarDatos.addActionListener((ActionEvent e) -> {
                try {
                    // Obtener los nuevos valores ingresados
                    String nuevoNombreEquipo = txtNuevoNombreEquipo.getText();
                    String nuevoEstado = txtNuevoEstado.getText();

                    // Actualizar los datos en la base de datos
                    String updateSql = "UPDATE Equipos SET nombre_equipo = ?, estado = ? WHERE equipo_id = ?";
                    PreparedStatement updatePs = Conexion.prepararConsultaSinResultado(updateSql);
                    updatePs.setString(1, nuevoNombreEquipo);
                    updatePs.setString(2, nuevoEstado);
                    updatePs.setInt(3, equipo_id);
                    updatePs.executeUpdate();

                    // Mostrar mensaje de confirmación
                    JOptionPane.showMessageDialog(dialogo, "Datos del Equipo actualizados correctamente", 
                            "Actualización de Equipo", JOptionPane.INFORMATION_MESSAGE);
                    dialogo.dispose(); // Cerrar el diálogo

                    // Actualizar la tabla de minas en la interfaz principal
                    actualizar();
                } catch (NumberFormatException | SQLException ex) {
                    JOptionPane.showMessageDialog(dialogo, "Error al actualizar el Equipo: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            });

            // Agregar el botón al diálogo
            dialogo.add(new JPanel()); // Espacio vacío
            dialogo.add(btnActualizarDatos);

            // Ajustar el tamaño y la posición del diálogo
            dialogo.pack();
            dialogo.setLocationRelativeTo(this); // Centrar en la ventana principal
            dialogo.setVisible(true);
        } else {
            // Si no se encontraron resultados, mostrar un mensaje de error
            JOptionPane.showMessageDialog(this, "No se encontró un Equipo con la ID ingresada", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (NumberFormatException | SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al buscar el Equipo: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

}
    
private void actualizarMantenimiento() {
    // Mostrar cuadro de diálogo para ingresar la ID de la producción a actualizar
    String mantenimientoIdString = JOptionPane.showInputDialog(this, "Ingrese el ID del mantenimiento a actualizar:",
            "Actualizar Mantenimiento", JOptionPane.PLAIN_MESSAGE);

    // Verificar si se ingresó un valor válido
    if (mantenimientoIdString == null || mantenimientoIdString.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Debe ingresar una ID válida", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        int mantenimientoId = Integer.parseInt(mantenimientoIdString);

        // Consultar la base de datos para obtener los datos de la producción
        String sql = "SELECT fecha, descripcion, costo FROM Mantenimiento WHERE mantenimiento_id = ?";
        PreparedStatement ps = Conexion.prepararConsultaSinResultado(sql);
        ps.setInt(1, mantenimientoId);
        ResultSet rs = ps.executeQuery();

        // Verificar si se encontraron resultados
        if (rs.next()) {
            // Obtener los valores de los campos correspondientes
            Date fecha = rs.getDate("fecha");
            String descripcion = rs.getString("descripcion");
            double costo = rs.getDouble("costo");

            // Crear un nuevo diálogo para modificar los datos
            JDialog dialogo = new JDialog();
            dialogo.setTitle("Actualizar Mantenimiento");
            dialogo.setModal(true);
            dialogo.setLayout(new GridLayout(4, 2));

            // Campos de texto para ingresar los nuevos valores
            JTextField txtNuevaFecha = new JTextField(String.valueOf(fecha));
            JTextField txtNuevaDescripcion = new JTextField(descripcion);
            JTextField txtNuevoCosto = new JTextField(String.valueOf(costo));

            // Agregar los campos al diálogo
            dialogo.add(new JLabel("Nueva Fecha:"));
            dialogo.add(txtNuevaFecha);
            dialogo.add(new JLabel("Nueva Descripción:"));
            dialogo.add(txtNuevaDescripcion);
            dialogo.add(new JLabel("Nuevo Costo del Mantenimiento:"));
            dialogo.add(txtNuevoCosto);

            // Botón para actualizar los datos
            JButton btnActualizarDatos = new JButton("Actualizar");
            btnActualizarDatos.addActionListener((ActionEvent e) -> {
                try {
                    // Obtener los nuevos valores ingresados
                    Date nuevaFecha = Date.valueOf(txtNuevaFecha.getText());
                    String nuevaDescripcion = txtNuevaDescripcion.getText();
                    Double nuevoCosto = Double.parseDouble(txtNuevoCosto.getText());

                    // Actualizar los datos en la base de datos
                    String updateSql = "UPDATE Mantenimiento SET fecha = ?, descripcion = ?, "
                            + "costo = ? WHERE mantenimiento_id = ?";
                    PreparedStatement updatePs = Conexion.prepararConsultaSinResultado(updateSql);
                    updatePs.setDate(1, nuevaFecha);
                    updatePs.setString(2, nuevaDescripcion);
                    updatePs.setDouble(3, nuevoCosto);
                    updatePs.setInt(4, mantenimientoId);
                    updatePs.executeUpdate();

                    // Mostrar mensaje de confirmación
                    JOptionPane.showMessageDialog(dialogo, "Datos del Mantenimiento actualizados correctamente", 
                            "Actualización del Mantenimiento", JOptionPane.INFORMATION_MESSAGE);
                    dialogo.dispose(); // Cerrar el diálogo

                    // Actualizar la tabla de producciones en la interfaz principal
                    actualizar();
                } catch (NumberFormatException | SQLException ex) {
                    JOptionPane.showMessageDialog(dialogo, "Error al actualizar el mantenimiento: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            });

            // Agregar el botón al diálogo
            dialogo.add(new JPanel()); // Espacio vacío
            dialogo.add(btnActualizarDatos);

            // Ajustar el tamaño y la posición del diálogo
            dialogo.pack();
            dialogo.setLocationRelativeTo(this); // Centrar en la ventana principal
            dialogo.setVisible(true);
        } else {
            // Si no se encontraron resultados, mostrar un mensaje de error
            JOptionPane.showMessageDialog(this, "No se encontró un Mantenimiento con la ID ingresada", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (NumberFormatException | SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al buscar el Mantenimiento: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    
private void actualizarMinaTipoMineral() {
    // Mostrar cuadro de diálogo para ingresar la ID de la mina
    String mina_tipomineralIdString = JOptionPane.showInputDialog(this, "Ingrese el ID de la tabla Minas/Tipo Mineral actualizar:", 
            "Actualizar Minas/Tipo Mineral", JOptionPane.PLAIN_MESSAGE);
    
    // Verificar si se ingresó un valor válido
    if (mina_tipomineralIdString == null || mina_tipomineralIdString.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Debe ingresar una ID válida", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    try {
        int mina_tipomineral_id = Integer.parseInt(mina_tipomineralIdString);

        // Consultar la base de datos para obtener los datos de la mina
        String sql = "SELECT mina_id, tipo_mineral_id FROM Mina_TipoMineral WHERE mina_tipoMineral_id = ?";
        PreparedStatement ps = Conexion.prepararConsultaSinResultado(sql);
        ps.setInt(1, mina_tipomineral_id);
        ResultSet rs = ps.executeQuery();

        // Verificar si se encontraron resultados
        if (rs.next()) {
            // Obtener los valores de los campos correspondientes
            int mina_id = rs.getInt("mina_id");
            int tipo_mineral_id = rs.getInt("tipo_mineral_id");

            // Crear un nuevo diálogo para modificar los datos
            JDialog dialogo = new JDialog();
            dialogo.setTitle("Modificar Mina/Tipo Mineral");
            dialogo.setModal(true);
            dialogo.setLayout(new GridLayout(3, 2));

            // Campos de texto para ingresar los nuevos valores
            JTextField txtNuevaMinaID = new JTextField(String.valueOf(mina_id));
            JTextField txtNuevoTipoMineralID = new JTextField(String.valueOf(tipo_mineral_id));

            // Agregar los campos al diálogo
            dialogo.add(new JLabel("Nueva ID de la Mina:"));
            dialogo.add(txtNuevaMinaID);
            dialogo.add(new JLabel("Nueva ID del Tipo de Mineral:"));
            dialogo.add(txtNuevoTipoMineralID);
            
            // Botón para actualizar los datos
            JButton btnActualizarDatos = new JButton("Actualizar");
            btnActualizarDatos.addActionListener((ActionEvent e) -> {
                try {
                    // Obtener los nuevos valores ingresados
                    int nuevaMinaID = Integer.parseInt(txtNuevaMinaID.getText());
                    int nuevoTipoMineralID = Integer.parseInt(txtNuevoTipoMineralID.getText());

                    // Actualizar los datos en la base de datos
                    String updateSql = "UPDATE Mina_TipoMineral SET mina_id = ?, tipo_mineral_id = ? "
                            + "WHERE mina_tipoMineral_id = ?";
                    PreparedStatement updatePs = Conexion.prepararConsultaSinResultado(updateSql);
                    updatePs.setInt(1, nuevaMinaID);
                    updatePs.setInt(2, nuevoTipoMineralID);
                    updatePs.setInt(3, mina_tipomineral_id);
                    updatePs.executeUpdate();

                    // Mostrar mensaje de confirmación
                    JOptionPane.showMessageDialog(dialogo, "Datos de la Mina y Mineral actualizados correctamente", 
                            "Actualización de la Mina y Mineral", JOptionPane.INFORMATION_MESSAGE);
                    dialogo.dispose(); // Cerrar el diálogo

                    // Actualizar la tabla de minas en la interfaz principal
                    actualizar();
                } catch (NumberFormatException | SQLException ex) {
                    JOptionPane.showMessageDialog(dialogo, "Error al actualizar la Mina y Mineral: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            });

            // Agregar el botón al diálogo
            dialogo.add(new JPanel()); // Espacio vacío
            dialogo.add(btnActualizarDatos);

            // Ajustar el tamaño y la posición del diálogo
            dialogo.pack();
            dialogo.setLocationRelativeTo(this); // Centrar en la ventana principal
            dialogo.setVisible(true);
        } else {
            // Si no se encontraron resultados, mostrar un mensaje de error
            JOptionPane.showMessageDialog(this, "No se encontró una Mina y Mineral con la ID ingresada", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (NumberFormatException | SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al buscar la Mina y Mineral: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

}
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Vista_Mina;
    private javax.swing.JButton btn_actualizaUbicacion;
    private javax.swing.JButton btn_actualizarEmpleados;
    private javax.swing.JButton btn_actualizarEquipos;
    private javax.swing.JButton btn_actualizarMantenimiento;
    private javax.swing.JButton btn_actualizarMinas;
    private javax.swing.JButton btn_actualizarProduccion;
    private javax.swing.JButton btn_actualizarTipoMinas;
    private javax.swing.JButton btn_buscar1;
    private javax.swing.JButton btn_buscar2;
    private javax.swing.JButton btn_buscar3;
    private javax.swing.JButton btn_buscar4;
    private javax.swing.JButton btn_buscar5;
    private javax.swing.JButton btn_buscar6;
    private javax.swing.JButton btn_eliminarEmpleados;
    private javax.swing.JButton btn_eliminarEquipos;
    private javax.swing.JButton btn_eliminarMantenimiento;
    private javax.swing.JButton btn_eliminarMinas;
    private javax.swing.JButton btn_eliminarProduccion;
    private javax.swing.JButton btn_eliminarTipoMinas;
    private javax.swing.JButton btn_eliminarUbicacion;
    private javax.swing.JButton btn_registrarEmpleados;
    private javax.swing.JButton btn_registrarEquipos;
    private javax.swing.JButton btn_registrarMantenimiento;
    private javax.swing.JButton btn_registrarMinas;
    private javax.swing.JButton btn_registrarProduccion;
    private javax.swing.JButton btn_registrarTipoMineral;
    private javax.swing.JButton btn_registrarUbicacion;
    private javax.swing.JButton btn_regresarlogo;
    private javax.swing.JComboBox<String> cbx_estadoMin;
    private javax.swing.JComboBox<String> cbx_idCiudad;
    private javax.swing.JComboBox<String> cbx_idEmpMin;
    private javax.swing.JComboBox<String> cbx_idEquiMant;
    private javax.swing.JComboBox<String> cbx_idEquipoMin;
    private javax.swing.JComboBox<String> cbx_idProdMin;
    private javax.swing.JComboBox<String> cbx_idTipoMina;
    private javax.swing.JComboBox<String> cbx_idUbiMin;
    private javax.swing.JPanel datos_panel_empleado;
    private javax.swing.JPanel datos_panel_equipo;
    private javax.swing.JPanel datos_panel_mantenimiento;
    private javax.swing.JPanel datos_panel_mina;
    private javax.swing.JPanel datos_panel_produccion;
    private javax.swing.JPanel datos_panel_tipomineral;
    private javax.swing.JPanel datos_panel_ubicacion;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable tbl_TipoMineral;
    private javax.swing.JTable tbl_empleados;
    private javax.swing.JTable tbl_equipos;
    private javax.swing.JTable tbl_mantenimiento;
    private javax.swing.JTable tbl_minas;
    private javax.swing.JTable tbl_minas_ubi;
    private javax.swing.JTable tbl_produccion;
    private javax.swing.JTextField txt_ApellidoEmpl;
    private javax.swing.JTextField txt_FechaNacimientoEmpl;
    private javax.swing.JTextField txt_NombreMina;
    private javax.swing.JTextField txt_altitud;
    private javax.swing.JTextField txt_buscarFechaMant;
    private javax.swing.JTextField txt_buscarNombreEmpleado;
    private javax.swing.JTextField txt_buscarNombreEquipo;
    private javax.swing.JTextField txt_buscarNombreMina;
    private javax.swing.JTextField txt_buscarNombreProduccion;
    private javax.swing.JTextField txt_buscarNombreTipoMina;
    private javax.swing.JTextField txt_cantidadExt;
    private javax.swing.JTextField txt_capExtMina;
    private javax.swing.JTextField txt_costoMant;
    private javax.swing.JTextField txt_densidadTM;
    private javax.swing.JTextField txt_descripcionMant;
    private javax.swing.JTextField txt_descripcionTM;
    private javax.swing.JTextField txt_estadoEqui;
    private javax.swing.JTextField txt_fechaMant;
    private javax.swing.JTextField txt_fechaProd;
    private javax.swing.JTextField txt_latitud;
    private javax.swing.JTextField txt_longitud;
    private javax.swing.JTextField txt_mineralExt;
    private javax.swing.JTextField txt_nombreEmpl;
    private javax.swing.JTextField txt_nombreEqui;
    private javax.swing.JTextField txt_nombreTM;
    private javax.swing.JTextField txt_puestoEmpl;
    private javax.swing.JTextField txt_puntoEbuTM;
    private javax.swing.JTextField txt_puntoFusTM;
    private javax.swing.JTextField txt_tipoEqui;
    // End of variables declaration//GEN-END:variables

}
